
prog:     file format elf32-i386


Disassembly of section .init:

08048274 <_init>:
 8048274:	53                   	push   %ebx
 8048275:	83 ec 08             	sub    $0x8,%esp
 8048278:	e8 83 00 00 00       	call   8048300 <__x86.get_pc_thunk.bx>
 804827d:	81 c3 0f 14 00 00    	add    $0x140f,%ebx
 8048283:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048289:	85 c0                	test   %eax,%eax
 804828b:	74 05                	je     8048292 <_init+0x1e>
 804828d:	e8 1e 00 00 00       	call   80482b0 <__gmon_start__@plt>
 8048292:	83 c4 08             	add    $0x8,%esp
 8048295:	5b                   	pop    %ebx
 8048296:	c3                   	ret    

Disassembly of section .plt:

080482a0 <__gmon_start__@plt-0x10>:
 80482a0:	ff 35 90 96 04 08    	pushl  0x8049690
 80482a6:	ff 25 94 96 04 08    	jmp    *0x8049694
 80482ac:	00 00                	add    %al,(%eax)
	...

080482b0 <__gmon_start__@plt>:
 80482b0:	ff 25 98 96 04 08    	jmp    *0x8049698
 80482b6:	68 00 00 00 00       	push   $0x0
 80482bb:	e9 e0 ff ff ff       	jmp    80482a0 <_init+0x2c>

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 9c 96 04 08    	jmp    *0x804969c
 80482c6:	68 08 00 00 00       	push   $0x8
 80482cb:	e9 d0 ff ff ff       	jmp    80482a0 <_init+0x2c>

Disassembly of section .text:

080482d0 <_start>:
 80482d0:	31 ed                	xor    %ebp,%ebp
 80482d2:	5e                   	pop    %esi
 80482d3:	89 e1                	mov    %esp,%ecx
 80482d5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482d8:	50                   	push   %eax
 80482d9:	54                   	push   %esp
 80482da:	52                   	push   %edx
 80482db:	68 70 84 04 08       	push   $0x8048470
 80482e0:	68 00 84 04 08       	push   $0x8048400
 80482e5:	51                   	push   %ecx
 80482e6:	56                   	push   %esi
 80482e7:	68 da 83 04 08       	push   $0x80483da
 80482ec:	e8 cf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 80482f1:	f4                   	hlt    
 80482f2:	66 90                	xchg   %ax,%ax
 80482f4:	66 90                	xchg   %ax,%ax
 80482f6:	66 90                	xchg   %ax,%ax
 80482f8:	66 90                	xchg   %ax,%ax
 80482fa:	66 90                	xchg   %ax,%ax
 80482fc:	66 90                	xchg   %ax,%ax
 80482fe:	66 90                	xchg   %ax,%ax

08048300 <__x86.get_pc_thunk.bx>:
 8048300:	8b 1c 24             	mov    (%esp),%ebx
 8048303:	c3                   	ret    
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <deregister_tm_clones>:
 8048310:	b8 ab 96 04 08       	mov    $0x80496ab,%eax
 8048315:	2d a8 96 04 08       	sub    $0x80496a8,%eax
 804831a:	83 f8 06             	cmp    $0x6,%eax
 804831d:	76 1a                	jbe    8048339 <deregister_tm_clones+0x29>
 804831f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048324:	85 c0                	test   %eax,%eax
 8048326:	74 11                	je     8048339 <deregister_tm_clones+0x29>
 8048328:	55                   	push   %ebp
 8048329:	89 e5                	mov    %esp,%ebp
 804832b:	83 ec 14             	sub    $0x14,%esp
 804832e:	68 a8 96 04 08       	push   $0x80496a8
 8048333:	ff d0                	call   *%eax
 8048335:	83 c4 10             	add    $0x10,%esp
 8048338:	c9                   	leave  
 8048339:	f3 c3                	repz ret 
 804833b:	90                   	nop
 804833c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048340 <register_tm_clones>:
 8048340:	b8 a8 96 04 08       	mov    $0x80496a8,%eax
 8048345:	2d a8 96 04 08       	sub    $0x80496a8,%eax
 804834a:	c1 f8 02             	sar    $0x2,%eax
 804834d:	89 c2                	mov    %eax,%edx
 804834f:	c1 ea 1f             	shr    $0x1f,%edx
 8048352:	01 d0                	add    %edx,%eax
 8048354:	d1 f8                	sar    %eax
 8048356:	74 1b                	je     8048373 <register_tm_clones+0x33>
 8048358:	ba 00 00 00 00       	mov    $0x0,%edx
 804835d:	85 d2                	test   %edx,%edx
 804835f:	74 12                	je     8048373 <register_tm_clones+0x33>
 8048361:	55                   	push   %ebp
 8048362:	89 e5                	mov    %esp,%ebp
 8048364:	83 ec 10             	sub    $0x10,%esp
 8048367:	50                   	push   %eax
 8048368:	68 a8 96 04 08       	push   $0x80496a8
 804836d:	ff d2                	call   *%edx
 804836f:	83 c4 10             	add    $0x10,%esp
 8048372:	c9                   	leave  
 8048373:	f3 c3                	repz ret 
 8048375:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048380 <__do_global_dtors_aux>:
 8048380:	80 3d a8 96 04 08 00 	cmpb   $0x0,0x80496a8
 8048387:	75 13                	jne    804839c <__do_global_dtors_aux+0x1c>
 8048389:	55                   	push   %ebp
 804838a:	89 e5                	mov    %esp,%ebp
 804838c:	83 ec 08             	sub    $0x8,%esp
 804838f:	e8 7c ff ff ff       	call   8048310 <deregister_tm_clones>
 8048394:	c6 05 a8 96 04 08 01 	movb   $0x1,0x80496a8
 804839b:	c9                   	leave  
 804839c:	f3 c3                	repz ret 
 804839e:	66 90                	xchg   %ax,%ax

080483a0 <frame_dummy>:
 80483a0:	b8 9c 95 04 08       	mov    $0x804959c,%eax
 80483a5:	8b 10                	mov    (%eax),%edx
 80483a7:	85 d2                	test   %edx,%edx
 80483a9:	75 05                	jne    80483b0 <frame_dummy+0x10>
 80483ab:	eb 93                	jmp    8048340 <register_tm_clones>
 80483ad:	8d 76 00             	lea    0x0(%esi),%esi
 80483b0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483b5:	85 d2                	test   %edx,%edx
 80483b7:	74 f2                	je     80483ab <frame_dummy+0xb>
 80483b9:	55                   	push   %ebp
 80483ba:	89 e5                	mov    %esp,%ebp
 80483bc:	83 ec 14             	sub    $0x14,%esp
 80483bf:	50                   	push   %eax
 80483c0:	ff d2                	call   *%edx
 80483c2:	83 c4 10             	add    $0x10,%esp
 80483c5:	c9                   	leave  
 80483c6:	e9 75 ff ff ff       	jmp    8048340 <register_tm_clones>

080483cb <sum>:
 80483cb:	8b 44 24 08          	mov    0x8(%esp),%eax
 80483cf:	03 44 24 04          	add    0x4(%esp),%eax
 80483d3:	01 05 ac 96 04 08    	add    %eax,0x80496ac
 80483d9:	c3                   	ret    

080483da <main>:
 80483da:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80483de:	83 e4 f0             	and    $0xfffffff0,%esp
 80483e1:	ff 71 fc             	pushl  -0x4(%ecx)
 80483e4:	55                   	push   %ebp
 80483e5:	89 e5                	mov    %esp,%ebp
 80483e7:	51                   	push   %ecx
 80483e8:	83 ec 0c             	sub    $0xc,%esp
 80483eb:	6a 03                	push   $0x3
 80483ed:	6a 01                	push   $0x1
 80483ef:	e8 d7 ff ff ff       	call   80483cb <sum>
 80483f4:	83 c4 10             	add    $0x10,%esp
 80483f7:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 80483fa:	c9                   	leave  
 80483fb:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80483fe:	c3                   	ret    
 80483ff:	90                   	nop

08048400 <__libc_csu_init>:
 8048400:	55                   	push   %ebp
 8048401:	57                   	push   %edi
 8048402:	31 ff                	xor    %edi,%edi
 8048404:	56                   	push   %esi
 8048405:	53                   	push   %ebx
 8048406:	e8 f5 fe ff ff       	call   8048300 <__x86.get_pc_thunk.bx>
 804840b:	81 c3 81 12 00 00    	add    $0x1281,%ebx
 8048411:	83 ec 1c             	sub    $0x1c,%esp
 8048414:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048418:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804841e:	e8 51 fe ff ff       	call   8048274 <_init>
 8048423:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048429:	29 c6                	sub    %eax,%esi
 804842b:	c1 fe 02             	sar    $0x2,%esi
 804842e:	85 f6                	test   %esi,%esi
 8048430:	74 27                	je     8048459 <__libc_csu_init+0x59>
 8048432:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048438:	8b 44 24 38          	mov    0x38(%esp),%eax
 804843c:	89 2c 24             	mov    %ebp,(%esp)
 804843f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048443:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048447:	89 44 24 04          	mov    %eax,0x4(%esp)
 804844b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048452:	83 c7 01             	add    $0x1,%edi
 8048455:	39 f7                	cmp    %esi,%edi
 8048457:	75 df                	jne    8048438 <__libc_csu_init+0x38>
 8048459:	83 c4 1c             	add    $0x1c,%esp
 804845c:	5b                   	pop    %ebx
 804845d:	5e                   	pop    %esi
 804845e:	5f                   	pop    %edi
 804845f:	5d                   	pop    %ebp
 8048460:	c3                   	ret    
 8048461:	eb 0d                	jmp    8048470 <__libc_csu_fini>
 8048463:	90                   	nop
 8048464:	90                   	nop
 8048465:	90                   	nop
 8048466:	90                   	nop
 8048467:	90                   	nop
 8048468:	90                   	nop
 8048469:	90                   	nop
 804846a:	90                   	nop
 804846b:	90                   	nop
 804846c:	90                   	nop
 804846d:	90                   	nop
 804846e:	90                   	nop
 804846f:	90                   	nop

08048470 <__libc_csu_fini>:
 8048470:	f3 c3                	repz ret 

Disassembly of section .fini:

08048474 <_fini>:
 8048474:	53                   	push   %ebx
 8048475:	83 ec 08             	sub    $0x8,%esp
 8048478:	e8 83 fe ff ff       	call   8048300 <__x86.get_pc_thunk.bx>
 804847d:	81 c3 0f 12 00 00    	add    $0x120f,%ebx
 8048483:	83 c4 08             	add    $0x8,%esp
 8048486:	5b                   	pop    %ebx
 8048487:	c3                   	ret    
